//=============================================================================
//
// 弾基本処理 (CBulletBase)[bullet.cpp]
// Author : Kodama Yuto
//
//=============================================================================
#include "bullet.h"
#include "manager.h"

#include "load.h"
#include "sceneBillboard.h"
#include "sceneX.h"
//=============================================================================
// コンストラクタ＆デストラクタ	(CBulletBase)
//=============================================================================
CBulletBase::CBulletBase(int nPriority) : CScene(nPriority)
{

}
CBulletBase::~CBulletBase()
{

}

//=============================================================================
// 設定処理(CBulletBase)
//=============================================================================
void CBulletBase::Set(D3DXVECTOR3 pos, D3DXVECTOR3 rot)
{

}

//=============================================================================
// 初期化処理(CBulletBase)
//=============================================================================
HRESULT CBulletBase::Init(void)
{


	return S_OK;
}

//=============================================================================
// 終了処理(CBulletBase)
//=============================================================================
void CBulletBase::Uninit(void)
{


	Release();
}

//=============================================================================
// 更新処理(CBulletBase)
//=============================================================================
void CBulletBase::Update(void)
{

}

//=============================================================================
// 描画処理(CBulletBase)
//=============================================================================
void CBulletBase::Draw(void)
{

}

//=============================================================================
//
// モデル弾処理 (CModelBullet)[bullet.cpp]
// Author : Kodama Yuto
//
//=============================================================================
//=============================================================================
// コンストラクタ＆デストラクタ	(CModelBullet)
//=============================================================================
CModelBullet::CModelBullet(int nPriority) : CBulletBase(nPriority)
{

}
CModelBullet::~CModelBullet()
{

}

//=============================================================================
// 設定処理(CModelBullet)
//=============================================================================
void CModelBullet::Set(D3DXVECTOR3 pos, D3DXVECTOR3 rot)
{
	CBulletBase::Set(pos,rot);
}

//=============================================================================
// 初期化処理(CModelBullet)
//=============================================================================
HRESULT CModelBullet::Init(void)
{
	CBulletBase::Init();


	return S_OK;
}

//=============================================================================
// 終了処理(CModelBullet)
//=============================================================================
void CModelBullet::Uninit(void)
{
	CBulletBase::Uninit();

}

//=============================================================================
// 更新処理(CModelBullet)
//=============================================================================
void CModelBullet::Update(void)
{
	CBulletBase::Update();
}

//=============================================================================
// 描画処理(CModelBullet)
//=============================================================================
void CModelBullet::Draw(void)
{

}

//=============================================================================
//
// 文字弾処理 (CWordBullet)[bullet.cpp]
// Author : Kodama Yuto
//
//=============================================================================
//=============================================================================
// コンストラクタ＆デストラクタ	(CWordBullet)
//=============================================================================
CWordBullet::CWordBullet(int nPriority) : CBulletBase(nPriority)
{
	m_pWord = NULL;
}
CWordBullet::~CWordBullet()
{

}

//=============================================================================
// 設定処理(CWordBullet)
//=============================================================================
void CWordBullet::Set(D3DXVECTOR3 pos, D3DXVECTOR3 rot, int nWordNum)
{
	CBulletBase::Set(pos, rot);
	m_pWord = CSceneBillBoard::Create(pos,30.0f,30.0f,"WORD");
	if (m_pWord != NULL) { m_pWord->SetTexture(D3DXVECTOR2(0.0f + ((nWordNum / 5) * 0.1f), 0.0f + ((nWordNum % 5) * 0.2f)),
											   D3DXVECTOR2(0.1f + ((nWordNum / 5) * 0.1f), 0.2f + ((nWordNum % 5) * 0.2f))); };
}

//=============================================================================
// 初期化処理(CWordBullet)
//=============================================================================
HRESULT CWordBullet::Init(void)
{
	CBulletBase::Init();

	return S_OK;
}

//=============================================================================
// 終了処理(CWordBullet)
//=============================================================================
void CWordBullet::Uninit(void)
{
	CBulletBase::Uninit();

}

//=============================================================================
// 更新処理(CWordBullet)
//=============================================================================
void CWordBullet::Update(void)
{
	CBulletBase::Update();
}

//=============================================================================
// 描画処理(CWordBullet)
//=============================================================================
void CWordBullet::Draw(void)
{

}
